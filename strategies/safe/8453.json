{
  "0x27d47664e034f3F2414d647DE7Cd1c1e8E72a89c": [
    {
      "address": "0xCA1BD54AA1Ba661e9939491Bb8678C85E8c0e532",
      "asset": "0x4200000000000000000000000000000000000006",
      "yieldToken": "0x0000000000000000000000000000000000000000",
      "metadata": {
        "name": "stETH Leverage",
        "protocol": "Morpho",
        "description": "This vault leverages stETH yield by depositing stETH into Morpho - borrowing wETH and stake it for more stETH, which is then deposited again into Morpho. This is achieved via flash loans in order to reach the desired leverage in one transaction",
        "type": "LeverageV2"
      },
      "resolver": "morpho",
      "apySource": "custom",
      "apyId": "0f45d730-b279-4629-8e11-ccb5cc3038b4",
      "allocationPerc": 100,
      "leverage": 4
    }
  ],
  "0xCed0A751FDFfD92e4DeBD4181bbF9Bf26227DC7E": [
    {
      "address": "0xc2E4a44b4559789a1e98796f616878Ac899d5F1f",
      "asset": "0x4200000000000000000000000000000000000006",
      "yieldToken": "0x0000000000000000000000000000000000000000",
      "metadata": {
        "name": "stETH Leverage",
        "protocol": "Morpho",
        "description": "This vault leverages stETH yield by depositing stETH into Morpho - borrowing wETH and stake it for more stETH, which is then deposited again into Morpho. This is achieved via flash loans in order to reach the desired leverage in one transaction",
        "type": "LeverageV2"
      },
      "resolver": "morpho",
      "apySource": "custom",
      "apyId": "0f45d730-b279-4629-8e11-ccb5cc3038b4",
      "allocationPerc": 50,
      "leverage": 3
    },
    {
      "address": "0xc2E4a44b4559789a1e98796f616878Ac899d5F1f",
      "asset": "0x4200000000000000000000000000000000000006",
      "yieldToken": "0x0000000000000000000000000000000000000000",
      "metadata": {
        "name": "stETH Leverage",
        "protocol": "AaveV3",
        "description": "This vault leverages stETH yield by depositing stETH into AaveV3 - borrowing wETH and stake it for more stETH, which is then deposited again into AaveV3. This is achieved via flash loans in order to reach the desired leverage in one transaction",
        "type": "LeverageV2"
      },
      "resolver": "aavev3",
      "apySource": "custom",
      "apyId": "0f45d730-b279-4629-8e11-ccb5cc3038b4",
      "allocationPerc": 50,
      "leverage": 3
    }
  ],
  "0x63acB844f2415C696FDb726DcA73024e79e15f93": [
    {
      "address": "0xf360D1EfF05C0c0f29137ba3f718e2dD443E0CD0",
      "asset": "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913",
      "yieldToken": "0x0000000000000000000000000000000000000000",
      "metadata": {
        "name": "VaultCraft",
        "protocol": "VaultCraft",
        "description": "This vault is managed by VaultCraft.",
        "type": "safe"
      },
      "resolver": "safe",
      "allocationPerc": 100,
      "leverage": 0
    }
  ],
  "0xc0B668aE0E6b182f7e8E733f793BD83c0F3503d0": [
    {
      "address": "0x2c300DF07825aA41E42CBcA50fd3BFa1dd2D8ce6",
      "asset": "0x2416092f143378750bb29b79eD961ab195CcEea5",
      "yieldToken": "0x0000000000000000000000000000000000000000",
      "metadata": {
        "name": "VaultCraft",
        "protocol": "VaultCraft",
        "description": "This vault is managed by VaultCraft.",
        "type": "safe"
      },
      "resolver": "safe",
      "allocationPerc": 100,
      "leverage": 0
    }
  ],
  "0x1A3274Ca79773422A505E38f9E54968EbF6AFeE5": [
    {
      "address": "0xE4EC85d1fA560ffd382954EDB6b5Fa57479DC88D",
      "asset": "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913",
      "yieldToken": "0x0000000000000000000000000000000000000000",
      "metadata": {
        "name": "VaultCraft",
        "protocol": "VaultCraft",
        "description": "This vault is managed by VaultCraft.",
        "type": "safe"
      },
      "resolver": "safe",
      "allocationPerc": 100,
      "leverage": 0
    }
  ],
  "0x023577b99e8A59ac18454161EecD840Bd648D782": [
    {
      "address": "0x023577b99e8A59ac18454161EecD840Bd648D782",
      "asset": "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913",
      "yieldToken": "0x0000000000000000000000000000000000000000",
      "metadata": {
        "name": "Buying PT-USR-24APR2025",
        "protocol": "Pendle",
        "description": "This strategy involves purchasing Principal Tokens (PT) for USR that mature on April 24, 2025. By buying these tokens at a discount to their maturity value, you lock in a guaranteed fixed return if held until the maturity date.",
        "type": "safe"
      },
      "resolver": "safe",
      "allocationPerc": 100,
      "leverage": 0
    }
  ]
}
